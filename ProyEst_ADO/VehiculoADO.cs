using ProyEst_BE;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProyEst_ADO
{
    public class VehiculoADO
    {
        ConexionADO conexion = new ConexionADO();
        SqlConnection cnx = new SqlConnection();
        SqlCommand cmd = new SqlCommand();
        SqlDataReader dtr;
        DataView dtv;
        DataView dtv2;
        bool exito;

        public DataTable ListarVehiculos()
        {
            DataSet dts = new DataSet();
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ListarVehiculos";

                SqlDataAdapter sqla = new SqlDataAdapter(cmd);
                sqla.Fill(dts, "Vehiculos");
                dtv = dts.Tables["Vehiculos"].DefaultView;
            }
            catch (Exception x)
            {
                throw new Exception(x.Message);
            }
            return dts.Tables["Vehiculos"];
        }

        public DataTable ListarVehiculosRegistro()
        {
            DataSet dts = new DataSet();
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ListarVehiculosRegistro";

                SqlDataAdapter sqla = new SqlDataAdapter(cmd);
                sqla.Fill(dts, "Vehiculos");

                dtv = new DataView(dts.Tables["Vehiculos"]);//WE FILL THE DATAVIEW FOR FILTERING DONT FORGET TO INITIALIZE THE DATAVIEW !!!!!

            }
            catch (Exception x)
            {

                throw new Exception(x.Message);
            }
            return dts.Tables["Vehiculos"];
        }

        public VehiculoBE ConsultarVehiculo(string strcod)
        {
            VehiculoBE objVehiculoBE = new VehiculoBE();
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ConsultarVehiculo";

                cmd.Parameters.Add(new SqlParameter("@cod", strcod));//PARAMETER NAME IN DATABASE IS CALLED @cod NOT @vcod

                cnx.Open();
                dtr = cmd.ExecuteReader();
                if (dtr.HasRows)
                {
                    dtr.Read();//YOU KEEP FORGETTING THE READ METHOD!
                    objVehiculoBE.id_vehiculo = strcod;
                    objVehiculoBE.marca = dtr.GetString(dtr.GetOrdinal("MARCA"));
                    objVehiculoBE.modelo = dtr.GetString(dtr.GetOrdinal("MODELO"));
                    objVehiculoBE.placa = dtr.GetString(dtr.GetOrdinal("PLACA"));
                    dtr.Close();
                }
            }
            catch (Exception x)
            {
                throw;
            }
            finally
            {
                if (cnx.State == ConnectionState.Open)
                    cnx.Close();

                cmd.Parameters.Clear();
            }
            return objVehiculoBE;
        }

        public string InsertarVehiculo(VehiculoBE objVehiculoBE)
        {
            try
            {
                String vcod = "";

                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_InsertarVehiculo";

                cmd.Parameters.Add(new SqlParameter("@vmar", objVehiculoBE.marca));
                cmd.Parameters.Add(new SqlParameter("@vmod", objVehiculoBE.modelo));
                //cmd.Parameters.Add(new SqlParameter("@vdes", objVehiculoBE.descripcion));
                cmd.Parameters.Add(new SqlParameter("@vpla", objVehiculoBE.placa));
                cmd.Parameters.Add(new SqlParameter("@ccod", objVehiculoBE.id_cliente));
                cmd.Parameters.Add(new SqlParameter("@vtip", objVehiculoBE.tipo));
                cmd.Parameters.Add(new SqlParameter("@vcod", SqlDbType.Char, 6));//WE SET AN OUTPUT PARAMETER TO GET THE VEHICULO ID
                cmd.Parameters["@vcod"].Direction = ParameterDirection.Output;

                cnx.Open();
                cmd.ExecuteNonQuery();

                vcod = cmd.Parameters["@vcod"].Value.ToString();//WE RETURN THE OUTPUT PARAMETER (ID) GENERATED BY THE DB SCRIPT
                return vcod;
            }
            catch (Exception x)
            {
                return String.Empty;
            }
            finally
            {
                if (cnx.State == ConnectionState.Open)
                    cnx.Close();
                cmd.Parameters.Clear();
            }
        }

        public bool ActualizarVehiculo(VehiculoBE objVehiculoBE)
        {
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ActualizarVehiculo";

                cmd.Parameters.Add(new SqlParameter("@vcod", objVehiculoBE.id_vehiculo));
                cmd.Parameters.Add(new SqlParameter("@vmar", objVehiculoBE.marca));
                cmd.Parameters.Add(new SqlParameter("@vmod", objVehiculoBE.modelo));
                //cmd.Parameters.Add(new SqlParameter("@vdes", objVehiculoBE.descripcion));
                cmd.Parameters.Add(new SqlParameter("@vpla", objVehiculoBE.id_vehiculo));

                cnx.Open();
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (Exception x)
            {
                return false;
            }
            finally
            {
                if (cnx.State == ConnectionState.Open)
                    cnx.Close();
                cmd.Parameters.Clear();
            }
        }

        public DataView FiltrarVehiculos(string filtro)
        {
            try
            {
                dtv.RowFilter = "PLACA LIKE '%" + filtro + "%'";
            }
            catch (Exception x)
            {
                throw;
            }
            return dtv;
        }

        public DataTable ListarMarcas()
        {
            DataSet dts = new DataSet();
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ListarMarcas";

                cnx.Open();
                SqlDataAdapter sda = new SqlDataAdapter(cmd);
                sda.Fill(dts, "Marcas");
            }
            catch (Exception x)
            {
                throw;
            }
            finally
            {
                if (cnx.State == ConnectionState.Open)
                    cnx.Close();
                cmd.Parameters.Clear();
            }
            return dts.Tables["Marcas"];
        }

        public DataTable ConsultarModelos(string strcod)
        {
            DataSet dts = new DataSet();
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ConsultarModelos";

                cmd.Parameters.Add(new SqlParameter("@mcod", strcod));

                cnx.Open();
                SqlDataAdapter sda = new SqlDataAdapter(cmd);
                sda.Fill(dts, "Modelos");
            }
            catch (Exception)
            {
                throw;
            }
            finally
            {
                if (cnx.State == ConnectionState.Open)
                    cnx.Close();
                cmd.Parameters.Clear();
            }
            return dts.Tables["Modelos"];
        }

        public VehiculoBE ConsultarVehiculoPorPlaca(string placa)
        {
            VehiculoBE objVehiculoBE = new VehiculoBE();
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ConsultarVehiculoPorPlaca";

                cmd.Parameters.Add(new SqlParameter("@vplaca", placa));

                cnx.Open();
                dtr = cmd.ExecuteReader();

                if (dtr.HasRows)
                {
                    dtr.Read();
                    objVehiculoBE.id_vehiculo = dtr.GetString(dtr.GetOrdinal("ID_VEHICULO"));
                    objVehiculoBE.marca = dtr.GetString(dtr.GetOrdinal("MARCA"));
                    objVehiculoBE.modelo = dtr.GetString(dtr.GetOrdinal("MODELO"));
                    //objVehiculoBE.descripcion = dtr.GetString(dtr.GetOrdinal("DESCRIPCION"));
                    objVehiculoBE.placa = placa;
                    objVehiculoBE.id_cliente = dtr.GetString(dtr.GetOrdinal("ID_CLIENTE"));
                    objVehiculoBE.tipo = dtr.GetString(dtr.GetOrdinal("TIPO"));
                    dtr.Close();
                }
                else
                {
                    return null;
                }
            }
            catch (Exception x)
            {
                throw;
            }
            finally
            {
                if (cnx.State == ConnectionState.Open)
                    cnx.Close();
                cmd.Parameters.Clear();
            }
            return objVehiculoBE;
        }

        //public DataTable ConsultarVehiculoPorMarca(string marca)
        //{
        //    DataSet dts = new DataSet();
        //    try
        //    {
        //        cnx.ConnectionString = conexion.getConexion();
        //        cmd.Connection = cnx;
        //        cmd.CommandType = CommandType.StoredProcedure;
        //        cmd.CommandText = "usp_ConsultarVehiculoPorMarca";

        //        cmd.Parameters.Add(new SqlParameter("@vmar", marca));

        //        SqlDataAdapter sqla = new SqlDataAdapter(cmd);
        //        sqla.Fill(dts, "Marca");
        //    }
        //    catch (Exception x)
        //    {
        //        throw;
        //    }
        //    finally
        //    {
        //        if (cnx.State == ConnectionState.Open)
        //            cnx.Close();
        //        cmd.Parameters.Clear();
        //    }
        //    return dts.Tables["Vehiculos"];
        //}

        public DataView OrdenarVehiculosYFiltrarPorMarca(int criterio)
        {
            DataSet dts = new DataSet();
            try
            {
                cnx.ConnectionString = conexion.getConexion();
                cmd.Connection = cnx;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "usp_ListarVehiculosRegistro";

                SqlDataAdapter sqla = new SqlDataAdapter(cmd);
                sqla.Fill(dts, "Vehiculos");

                dtv2 = dts.Tables["Vehiculos"].DefaultView;

                switch (criterio)
                {
                    case 1:
                        dtv2.Sort = "PLACA";
                        break;
                    case 2:
                        dtv2.Sort = "MARCA";
                        break;
                }
            }
            catch (Exception x)
            {
                throw;
            }
            return dtv2;
        }

        public DataView OrdenarVehiculosYFiltrarPorMarca(int criterio, string marca)
        {
            try
            {
                switch (criterio)
                {
                    case 1:
                        dtv2.Sort = "PLACA";
                        break;
                    case 2:
                        dtv2.Sort = "MARCA";
                        break;
                }
                dtv.RowFilter = $"MARCA LIKE '%{marca}%'";//REMEBMBER THIS IS THIS ID OF THE BRAND NOT THE BRAND ITSELF
            }
            catch (Exception x)
            {
                throw;
            }
            return dtv;
        }
    }
}




